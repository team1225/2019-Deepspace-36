// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc1225.DeepSpace36.subsystems;


import org.usfirst.frc1225.DeepSpace36.commands.*;
import edu.wpi.first.wpilibj.livewindow.LiveWindow;
import edu.wpi.first.wpilibj.command.Subsystem;
import edu.wpi.first.wpilibj.PIDOutput;
import edu.wpi.first.wpilibj.PIDSource;
// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import com.ctre.phoenix.motorcontrol.can.WPI_TalonSRX;
import edu.wpi.first.wpilibj.AnalogGyro;
import edu.wpi.first.wpilibj.CounterBase.EncodingType;
import edu.wpi.first.wpilibj.Encoder;
import edu.wpi.first.wpilibj.PIDSourceType;
import edu.wpi.first.wpilibj.drive.MecanumDrive;

// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS


/**
 *
 */
public class DriveTrain extends Subsystem {

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    private AnalogGyro analogGyro1;
    private WPI_TalonSRX leftMid;
    private WPI_TalonSRX rigthMid;
    private Encoder quadratureEncoder1;
    private Encoder quadratureEncoder2;
    private Encoder quadratureEncoder3;
    private Encoder quadratureEncoder4;
    private WPI_TalonSRX rightFront;
    private WPI_TalonSRX leftFront;
    private WPI_TalonSRX rightRear;
    private WPI_TalonSRX leftRear;
    private MecanumDrive mecanumDrive1;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    public DriveTrain() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
        analogGyro1 = new AnalogGyro(0);
        addChild("AnalogGyro 1",analogGyro1);
        analogGyro1.setSensitivity(0.007);
        
        leftMid = new WPI_TalonSRX(3);
        
        
        
        rigthMid = new WPI_TalonSRX(2);
        
        
        
        quadratureEncoder1 = new Encoder(0, 1, false, EncodingType.k4X);
        addChild("Quadrature Encoder 1",quadratureEncoder1);
        quadratureEncoder1.setDistancePerPulse(1.0);
        quadratureEncoder1.setPIDSourceType(PIDSourceType.kRate);
        
        quadratureEncoder2 = new Encoder(2, 3, false, EncodingType.k4X);
        addChild("Quadrature Encoder 2",quadratureEncoder2);
        quadratureEncoder2.setDistancePerPulse(1.0);
        quadratureEncoder2.setPIDSourceType(PIDSourceType.kRate);
        
        quadratureEncoder3 = new Encoder(4, 5, false, EncodingType.k4X);
        addChild("Quadrature Encoder 3",quadratureEncoder3);
        quadratureEncoder3.setDistancePerPulse(1.0);
        quadratureEncoder3.setPIDSourceType(PIDSourceType.kRate);
        
        quadratureEncoder4 = new Encoder(6, 7, false, EncodingType.k4X);
        addChild("Quadrature Encoder 4",quadratureEncoder4);
        quadratureEncoder4.setDistancePerPulse(1.0);
        quadratureEncoder4.setPIDSourceType(PIDSourceType.kRate);
        
        rightFront = new WPI_TalonSRX(0);
        
        
        
        leftFront = new WPI_TalonSRX(1);
        
        
        
        rightRear = new WPI_TalonSRX(4);
        
        
        
        leftRear = new WPI_TalonSRX(5);
        
        
        
        mecanumDrive1 = new MecanumDrive(leftFront, leftRear,
              rightRear, rightFront);
        addChild("Mecanum Drive 1",mecanumDrive1);
        mecanumDrive1.setSafetyEnabled(true);
        mecanumDrive1.setExpiration(0.1);
        mecanumDrive1.setMaxOutput(1.0);

        

        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    }

    @Override
    public void initDefaultCommand() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND


        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

        // Set the default command for a subsystem here.
        // setDefaultCommand(new MySpecialCommand());
    }

    @Override
    public void periodic() {
        // Put code here to be run every loop

    }

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CMDPIDGETTERS


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CMDPIDGETTERS

    // Put methods for controlling this subsystem
    // here. Call these from Commands.

}

